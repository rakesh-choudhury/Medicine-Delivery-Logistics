/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.Delivery;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Enterprise.MedicineSupplierEnterprise;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.Organization.PriceSupervisoryOrganization;
import Business.Organization.DeliveryOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.SellingWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Rohan
 * 
 */
public class DeliveryWorkAreaJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private DeliveryOrganization organization;
    private Enterprise enterprise;
    private UserAccount userAccount;
    EcoSystem business;

    /**
     * Creates new form TransportWorkAreaJPanel
     */
    public DeliveryWorkAreaJPanel(JPanel userProcessContainer, UserAccount account,
            DeliveryOrganization organization, Enterprise enterprise, EcoSystem business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.organization = organization;
        this.enterprise = enterprise;
        this.business = business;
        this.userAccount = account;
        populateWorkQueueTable();
    }

    public void populateWorkQueueTable() {
        DefaultTableModel model = (DefaultTableModel) transportRequestJTable.getModel();
        model.setRowCount(0);
        for (WorkRequest work : organization.getWorkQueue().getWorkRequestList()) {
            if (work instanceof SellingWorkRequest) {
                SellingWorkRequest sellingWorkRequest = (SellingWorkRequest) work;
                Object[] row = new Object[6];
                row[0] = sellingWorkRequest;
                row[1] = sellingWorkRequest.getSource();
                row[2] = sellingWorkRequest.getDestination();
                
                row[3] = sellingWorkRequest.getTransportationCost();
                row[4] = sellingWorkRequest.getStatus();
                model.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        transportRequestJTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        forwardButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        costTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        transportRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sender", "Pharmacy Store", "Destination", "Delivery Cost ", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(transportRequestJTable);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 130, 780, 143));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 204, 0));
        jLabel1.setText("WELCOME TO TRANSPORT WORKAREA ");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 50, -1, -1));

        forwardButton.setBackground(new java.awt.Color(255, 204, 0));
        forwardButton.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        forwardButton.setText("FORWARD TO PRICE SUPERVISORY");
        forwardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                forwardButtonActionPerformed(evt);
            }
        });
        add(forwardButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 440, -1, -1));

        jLabel2.setText("DELIVERY COST* :  ");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 290, -1, -1));
        add(costTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 280, 180, 30));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/Delivery/delivery.png"))); // NOI18N
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 280, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void forwardButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_forwardButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = transportRequestJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            int cost;
            boolean isValid = true;
            try {
                cost = Integer.parseInt(costTextField.getText());
            } catch (NumberFormatException e) {
                isValid = false;
                JOptionPane.showMessageDialog(null, "Enter valid cost", "Error", JOptionPane.ERROR_MESSAGE);
                //throw e;
            }
            if(Integer.parseInt(costTextField.getText()) <=0){
                isValid = false;
                JOptionPane.showMessageDialog(null, "Enter valid cost", "Error", JOptionPane.ERROR_MESSAGE);
            }

            SellingWorkRequest request = (SellingWorkRequest) transportRequestJTable.getValueAt(selectedRow, 0);
            if (request.getStatus().equals("Sent To Delivery")) {
                if (isValid) {
                    request.setStatus("Forward to Price Supervisory");
                    request.setTransportationCost(Integer.parseInt(costTextField.getText()));
                    //ADD request to Market Enterprise- Transport Org
                    Organization org = null;
                    for (Network network : business.getNetworkList()) {
                        for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                            if (enterprise instanceof MedicineSupplierEnterprise) {
                                for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
                                    if (organization instanceof PriceSupervisoryOrganization) {
                                        org = organization;
                                        break;
                                    }
                                }
                            }

                        }
                    }
                    if (org != null) {
                        org.getWorkQueue().getWorkRequestList().add(request);
                        userAccount.getWorkQueue().getWorkRequestList().add(request);
                    }
                    JOptionPane.showMessageDialog(null, "Request Forwarded to Price Supervisory Sucessfully");
                     populateWorkQueueTable();
                     forwardButton.setEnabled(false);
                     costTextField.setText("");
                }

            } else {
                 request.setStatus("Forward to Price Supervisory");
                    request.setTransportationCost(Integer.parseInt(costTextField.getText()));
                    //ADD request to Market Enterprise- Transport Org
                    Organization org = null;
                    for (Network network : business.getNetworkList()) {
                        for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                            if (enterprise instanceof MedicineSupplierEnterprise) {
                                for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
                                    if (organization instanceof PriceSupervisoryOrganization) {
                                        org = organization;
                                        break;
                                    }
                                }
                            }

                        }
                    }
                    org.getWorkQueue().getWorkRequestList().add(request);
                        userAccount.getWorkQueue().getWorkRequestList().add(request);
                        JOptionPane.showMessageDialog(null, "Request Forwarded to Price Supervisory Sucessfully");
                     populateWorkQueueTable();
                     forwardButton.setEnabled(true);
                     costTextField.setText("");
            }
    }//GEN-LAST:event_forwardButtonActionPerformed
    }
    public boolean validateCost(String cost) {

        Pattern pattern = Pattern.compile("[0-9]*");
        Matcher matcher = pattern.matcher(cost);
        if (!matcher.matches()) {

            JOptionPane.showMessageDialog(null, "Please Enter valid cost", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        return true;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField costTextField;
    private javax.swing.JButton forwardButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable transportRequestJTable;
    // End of variables declaration//GEN-END:variables
}

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.MedicineSupplier;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Organization.MedicineSupplierOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.SellingWorkRequest;
import Business.WorkQueue.WorkRequest;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Rohan
 */
public class PharmacyStoreWorkAreaJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private MedicineSupplierOrganization organization;
    private EcoSystem business;

    /**
     * Creates new form CustomerWorkAreaJPanel
     */
    public PharmacyStoreWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, Enterprise enterprise, MedicineSupplierOrganization organization, EcoSystem business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.userAccount = account;
        this.organization = organization;
        this.business = business;
        populateWorkQueueTable();
    }

    public void populateWorkQueueTable() {
        DefaultTableModel model = (DefaultTableModel) workRequestJTable.getModel();
        model.setRowCount(0);
        for (WorkRequest work : organization.getWorkQueue().getWorkRequestList()) {
            if (work instanceof SellingWorkRequest) {
                SellingWorkRequest sellingWorkRequest = (SellingWorkRequest) work;
                Object[] row = new Object[6];
                row[0] = sellingWorkRequest;
                row[1] = sellingWorkRequest.getProductName();
                row[2] = sellingWorkRequest.getQuantity();
      
                row[3] = sellingWorkRequest.getSellingPrice();
                row[4] = sellingWorkRequest.getStatus();

                model.addRow(row);
            }
        }
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        acceptBtn = new javax.swing.JButton();
        priceTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sender", "Product Name", "Quantity", "Price", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(workRequestJTable);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 120, 770, 143));

        acceptBtn.setBackground(new java.awt.Color(255, 204, 0));
        acceptBtn.setText("FORWARD TO PATIENT");
        acceptBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceptBtnActionPerformed(evt);
            }
        });
        add(acceptBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 340, 240, -1));
        add(priceTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 270, 100, 30));

        jLabel2.setText("PLEASE ENTER PRICE * : ");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 270, -1, -1));

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        jLabel3.setText("WELCOME TO PHARMACY SOTRE WORKAREA");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 40, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/MedicineSupplier/phramacystore.jpg"))); // NOI18N
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-110, -60, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void acceptBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceptBtnActionPerformed
        // TODO add your handling code here:
        String price = priceTextField.getText();
        int sellingPrice;
        try {
            sellingPrice = Integer.parseInt(price);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Enter valid price", "Error", JOptionPane.ERROR_MESSAGE);
            //throw e;
        }
        if(Integer.parseInt(priceTextField.getText()) <= 0){
            JOptionPane.showMessageDialog(null, "Enter valid price", "Error", JOptionPane.ERROR_MESSAGE);
        }
        int selectedRow = workRequestJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            SellingWorkRequest request = (SellingWorkRequest) workRequestJTable.getValueAt(selectedRow, 0);
            if (request.getStatus().equals("Forward to Pharmacy Store")) {
                request.setStatus("Completed");
                request.setSellingPrice(Integer.parseInt(priceTextField.getText()));
                request.setReceiver(userAccount);
                double commission = 0.1 * Integer.parseInt(priceTextField.getText());
                request.setCommission(commission);
                JOptionPane.showMessageDialog(null, "Request Completed Sucessfully");
                populateWorkQueueTable();
                acceptBtn.setEnabled(false);
                priceTextField.setText("");


    }//GEN-LAST:event_acceptBtnActionPerformed
            else{
                 JOptionPane.showMessageDialog(null, "Same Request can not be accepted again", "Warning", JOptionPane.WARNING_MESSAGE);
            }
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton acceptBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField priceTextField;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables
}

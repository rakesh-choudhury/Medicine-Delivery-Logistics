/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package CustomerInterface;

import Business.Airliner;
import Business.Flight;
import Business.FlightSchedule;
import Business.TravelAgency;
import java.awt.CardLayout;
import java.util.ArrayList;
import java.util.HashSet;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;


/**
 *
 * @author rakesh
 */
public class ManageCustomersWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewBestFlightDealsJPanel
     */
    JPanel userProcessContainer;
    private TravelAgency travelAgency;
    private Flight flight;
    private Airliner airliner;
    private FlightSchedule flightschedulel;
    public ManageCustomersWorkAreaJPanel(JPanel userProcessContainer, TravelAgency travelAgency) {
        initComponents();
        this.userProcessContainer= userProcessContainer;
        this.travelAgency = travelAgency;
         this.airliner = airliner;
        this.flightschedulel = flightschedulel;
         addItemToComboBox();
    }

    public void addItemToComboBox() {
        ArrayList<String> allAirportNames = new ArrayList<>();
        for (FlightSchedule fS: travelAgency.getMTS().getmTS()) {
            for(Flight flight: fS.getFlightSchedule()) {
                allAirportNames.add(flight.getDepartAirport());
                allAirportNames.add(flight.getArrivalAirport());
            }
        }
        //remove duplicates
        HashSet<String> hs = new HashSet<>();
        hs.addAll(allAirportNames);
        allAirportNames.clear();
        allAirportNames.addAll(hs);
        
        for (String airportName: allAirportNames) {
            depCBox.addItem(airportName);
            arrCBox.addItem(airportName);
        }
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        expectPriceTxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        searchBtn = new javax.swing.JButton();
        jScrollPane = new javax.swing.JScrollPane();
        flightSearchTbl = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        depCBox = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        arrCBox = new javax.swing.JComboBox<>();
        selectBookBtn = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel1.setText("Manage Customers");

        jLabel2.setText("Price lower than:");

        searchBtn.setText("Search");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        flightSearchTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Flight No.", "Airliner Name", "Dep Time", "Arr TIme", "Price"
            }
        ));
        jScrollPane.setViewportView(flightSearchTbl);

        jLabel6.setText("$");

        jLabel5.setText("Source ");

        depCBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {  }));

        jLabel7.setText("Destination");

        arrCBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {  }));

        selectBookBtn.setText("Select And Book");
        selectBookBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectBookBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(107, 107, 107)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(selectBookBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(129, 129, 129)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel7))
                                .addGap(24, 24, 24))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)))
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(expectPriceTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(depCBox, 0, 97, Short.MAX_VALUE)
                            .addComponent(arrCBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                        .addComponent(searchBtn)))
                .addGap(157, 157, 157))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(expectPriceTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(2, 2, 2)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(depCBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(arrCBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(searchBtn))
                .addGap(3, 3, 3)
                .addComponent(selectBookBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(102, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        // TODO add your handling code here:
        // Price text field is allowed to be blank
                
       
        
        int expectPrice = 1000;
        if (!expectPriceTxt.getText().equals(""))
            expectPrice = Integer.parseInt(expectPriceTxt.getText());
        
        DefaultTableModel dtm = (DefaultTableModel) flightSearchTbl.getModel();
        dtm.setRowCount(0);
        Object[] row = new Object[5];
        
        for (FlightSchedule fS: travelAgency.getMTS().getmTS()) {
            for(Flight flight: fS.getFlightSchedule()) {
                if(flight.getDepartAirport().equals(depCBox.getSelectedItem()) &&
                        flight.getArrivalAirport().equals(arrCBox.getSelectedItem()) &&
                            flight.getSeat().get(0).getPrice() <= expectPrice) {                
                    row[0] = flight;
                    row[1] = fS.getAirliner().getAirlinerName();
                    row[2] = flight.getDepartTime();
                    row[3] = flight.getArrivalTime();
                    row[4] = "$"+flight.getSeat().get(0).getPrice();
                    dtm.addRow(row);
                }
            }
        }
         if(dtm.getRowCount() == 0)
            JOptionPane.showMessageDialog(null, "No Airliners found.");
    }//GEN-LAST:event_searchBtnActionPerformed

    private void selectBookBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectBookBtnActionPerformed
        // TODO add your handling code here:
        Flight flight = new Flight();
        int selectedRow = flightSearchTbl.getSelectedRow();
        if(selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row from table first", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        else {
            flight = (Flight)flightSearchTbl.getValueAt(selectedRow, 0);
        

        BookCustomersJPanel panel = new BookCustomersJPanel(userProcessContainer, travelAgency, flight,airliner,flightschedulel);
        userProcessContainer.add("BookCustomersJPanel", panel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
        }
        TableModel model = flightSearchTbl.getModel();
        int indexs[] = flightSearchTbl.getSelectedRows();
        Object[] row = new Object[5];
        
        ViewCustomersJPanel jpanel1 = new ViewCustomersJPanel(userProcessContainer, travelAgency, airliner, flightschedulel);
             DefaultTableModel model2 = (DefaultTableModel) jpanel1.ViewCustomerstbl.getModel();
        
        
          for(int i = 0; i < indexs.length; i++)
        {
            row[0] = model.getValueAt(indexs[i], 0);

            row[1] = model.getValueAt(indexs[i], 1);

            row[2] = model.getValueAt(indexs[i], 2);

            row[3] = model.getValueAt(indexs[i], 3);
            
            row[4] = model.getValueAt(indexs[i], 4);

            model2.addRow(row);
        }
        
        
        
    }//GEN-LAST:event_selectBookBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> arrCBox;
    private javax.swing.JComboBox<String> depCBox;
    private javax.swing.JTextField expectPriceTxt;
    private javax.swing.JTable flightSearchTbl;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane;
    private javax.swing.JButton searchBtn;
    private javax.swing.JButton selectBookBtn;
    // End of variables declaration//GEN-END:variables
}
